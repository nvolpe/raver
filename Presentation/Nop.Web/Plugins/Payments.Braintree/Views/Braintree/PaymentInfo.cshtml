@{
    Layout = "";
}
@model Nop.Plugin.Payments.Braintree.Models.PaymentInfoModel
@using Nop.Web.Framework;


<table width="100%" cellspacing="2" cellpadding="1" border="0">
    <tr>
        <td>
            @Html.NopLabelFor(model => model.CardholderName, false):
        </td>
        <td>
            @Html.TextBoxFor(model => model.CardholderName, new { style = "Width: 165px;", autocomplete = "off", Name = "" })
            @Html.ValidationMessageFor(model => model.CardholderName)
        </td>
    </tr>
    <tr>
        <td>
            @Html.NopLabelFor(model => model.CardNumber, false):
        </td>
        <td>
            @Html.TextBoxFor(model => model.CardNumber, new { style = "Width: 165px;", autocomplete = "off", maxlength = 22, Name = "" })
            @Html.ValidationMessageFor(model => model.CardNumber)
        </td>
    </tr>
    <tr>
        <td>
            @Html.NopLabelFor(model => model.ExpireMonth, false):
        </td>
        <td>
            @Html.DropDownListFor(model => model.ExpireMonth, Model.ExpireMonths, new { @Name = "" })
            /
            @Html.DropDownListFor(model => model.ExpireYear, Model.ExpireYears, new { @Name = "" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.NopLabelFor(model => model.CardCode, false):
        </td>
        <td>
            @Html.TextBoxFor(model => model.CardCode, new { style = "Width: 60px!important;", autocomplete = "off", maxlength = 4, Name = "" })
            @Html.ValidationMessageFor(model => model.CardCode)
        </td>
    </tr>
    <tr>
        <td><input style="display:none;" type="hidden" name="paymenttoken" id="paymenttoken" /></td>
        <td></td>
    </tr>
    <tr>
        <td><input style="display:none;" type="hidden" name="nextstep" value = "Next" id="nextstep" /></td>
        <td></td>
    </tr>
</table>


<script type="text/javascript">

    $(document).ready(function () {

        $.getScript("https://js.braintreegateway.com/v2/braintree.js", function (data, textStatus, jqxhr) {
            GetScriptCallback();
        });
    });

    function GetScriptCallback() {
        var clientToken = '@ViewBag.ClientToken';
        var client = new braintree.api.Client({ clientToken: clientToken });
        $(".payment-info-next-step-button").removeAttr("onClick");

        function braintreeResponseHandler(err, nonce) {
            if (err) {
                // Show the errors on the form
                $(".payment-errors").text('error.apierror');
            }
            else {
                // response contains id and card, which contains additional card details
                var token = nonce;
                $(".payment-errors").text("");
                var form = $(".payment-info-next-step-button").closest('form');

                $("#paymenttoken").val(token);
                if (document.location.href.indexOf('onepagecheckout') > -1) {
                    PaymentInfo.save();
                }
                else {
                    form.submit();
                }
            }

            $(".payment-info-next-step-button").removeAttr("disabled");
        }

        $(".payment-info-next-step-button").unbind().click(function (event) {
            $('.submit-button').attr("disabled", "disabled");
            $(".payment-errors").empty();
            var valid = true;

            if (!$('#ExpireMonth').val() || !$('#ExpireYear').val()) {
                $(".payment-errors").append('<br />' + '@T("Plugins.Payments.Braintree.Errors.ExpirationDateRequired")');
                $(".payment-info-next-step-button").removeAttr("disabled");
                valid = false;
            }
            else {
                var expireMonth = parseInt($('#ExpireMonth').val());
                var expireYear = parseInt($('#ExpireYear').val());
                var expirationDate = new Date(expireYear, expireMonth, 1, 0, 0, 0, 0);
                if (expirationDate < new Date()) {
                    $(".payment-errors").append('<br />' + '@T("Plugins.Payments.Braintree.Errors.ExpiredCard")');
                    $(".payment-info-next-step-button").removeAttr("disabled");
                    valid = false;
                }
            }
            
            if (!$('#CardNumber').val())
            {
                $(".payment-errors").append('<br />' + '@T("Plugins.Payments.Braintree.Errors.CardNumberRequired")');
                $(".payment-info-next-step-button").removeAttr("disabled");
                valid = false;
            }

            if (!$('#CardholderName').val()) {
                $(".payment-errors").append('<br />' + '@T("Plugins.Payments.Braintree.Errors.CardHolderNameRequired")');
                $(".payment-info-next-step-button").removeAttr("disabled");
                valid = false;
            }

            if (valid) {
                client.tokenizeCard({
                    number: $('#CardNumber').val(),
                    cardholderName: $('#CardholderName').val(),
                    expirationMonth: $('#ExpireMonth').val(),
                    expirationYear: $('#ExpireYear').val(),
                    cvv: $('#CardCode').val()
                }, braintreeResponseHandler);
            }

            return false;
        });
    };


</script>
<div class="payment-errors"></div>
<style>

.payment-errors {
    color: red;
}

</style>
